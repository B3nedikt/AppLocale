apply plugin: 'maven-publish'
apply plugin: 'signing'

def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
            organization organization
            organizationUrl siteUrl
        }
    }
    scm {
        connection gitUrl
        developerConnection gitUrl
        url siteUrl
    }
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {

                from components.release

                groupId publishedGroupId
                artifactId artifactId
                version = libraryVersion

                artifact sourcesJar
                artifact javadocJar

                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', libraryDescription)
                    root.appendNode('name', libraryName)
                    root.appendNode('url', siteUrl)
                    root.children().last() + pomConfig
                }
            }
        }

        repositories {
            maven {
                name = "MavenCentral"
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = propertyOrEnv("mavenUsername")
                    password = propertyOrEnv("mavenPassword")
                }
            }
        }
    }

    signing {
        def signingKeyId = propertyOrEnv("signingKeyId")
        def signingKey = propertyOrEnv("signingKey")
        def signingPassword = propertyOrEnv("signingPassword")
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)

        sign publishing.publications.release
    }
}

String propertyOrEnv(propertyName) {
    Properties properties = new Properties()
    File file = project.rootProject.file('local.properties')
    if (file.exists()) {
        properties.load(file.newDataInputStream())
        return properties.getProperty(propertyName)
    }
    return System.getenv(propertyName)
}
